//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

namespace NSTest;

function makeValue<T>(v: T): T {
    return v;
}

function checkerAny<U>(v: Any): Bool {
    return v.is<U>();
}

function checker<T, U>(v: T): Bool {
    return v.is<U>();
}

entrypoint function recordTests(): Int {
    let nv = makeValue<{f:Int, g:Int, h?:Int}>({f=1, g=2});

    check checker<{f:Int, g:Int, h?:Int}, {f:Int, g:Int}>(nv);
    check checker<{f:Int, g:Int, h?:Int}, {f:Int, g?:Int}>(nv);
    check checker<{f:Int, g:Int, h?:Int}, {f:Int, g:Int, k?:Int}>(nv);
    check checker<{f:Int, g:Int, h?:Int}, Any>(nv);
    check checker<{f:Int, g:Int, h?:Int}, Some>(nv);

    check !checker<{f:Int, g:Int, h?:Int}, None>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, Int>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, {f:Int, g:Int, h:Int}>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, [Int, Int]>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, Object>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, List<Int>>(nv);

    check checker<{f:Int, g:Int, h?:Int}, {f:Int, g:Int} | Int>(nv);
    check !checker<{f:Int, g:Int, h?:Int}, Int | String>(nv);

    return 1;
}

entrypoint function recordAnyTests(): Int {
    let nv = makeValue<Any>({f=1, g=2});

    check checkerAny<{f:Int, g:Int}>(nv);
    check checkerAny<{f:Int, g?:Int}>(nv);
    check checkerAny<{f:Int, g?:Int}>(nv);
    check checkerAny<{f:Int, g:Int, k?:Int}>(nv);
    check checkerAny<Any>(nv);
    check checkerAny<Some>(nv);

    check !checkerAny<None>(nv);
    check !checkerAny<Int>(nv);
    check !checkerAny<{f:Int, g:Int, h:Int}>(nv);
    check !checkerAny<[Int, Int]>(nv);
    check !checkerAny<Object>(nv);
    check !checkerAny<List<Int>>(nv);

    check checkerAny<{f:Int, g:Int} | Int>(nv);
    check !checkerAny<Int | String>(nv);

    return 1;
}

entrypoint function recordContentsTests(): Int {
    let nv = makeValue<{f:Int, g:Bool, h?:Int, k?:String}>({f=1, g=true, h=3});

    check checker<{f:Int, g:Bool, h?:Int, k?:String}, {f:Int, g:Bool, h:Any, k?:Int}>(nv);
    check checker<{f:Int, g:Bool, h?:Int, k?:String}, {f:Int, g:Any, h:Any}>(nv);

    check checkerAny<{f:Int, g:Bool, h:Any}>(nv);
    check checkerAny<{f:Int, g:Any, h:Any}>(nv);

    check checker<{f:Int, g:Any, h?:Int, k?:String}, {f:Int, g:Bool, h:Any}>(nv);
    check checker<{f:Int, g:Any, h?:Any, k?:Any}, {f:Any, g:Any, h?:Any}>(nv);

    check !checker<{f:Int, g:Bool, h?:Int, k?:String}, {f:Int, g:Int, h:Any}>(nv);
    check !checker<{f:Int, g:Bool, h?:Int, k?:String}, {f:Int, g:Any}>(nv);

    check !checkerAny<{f:Int, g:Int, h:Any}>(nv);
    check !checkerAny<{f:Int, g:Any}>(nv);

    check !checker<{f:Int, g:Any, h?:Int, k?:String}, {f:Int, g:Int, h:Any}>(nv);
    check !checker<{f:Any, g:Bool, h?:Int, k?:String}, {f:Any, g:Any}>(nv);

    return 1;
}
