//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

namespace NSTest;

function pthread(ref x: Int): Int {
    x = x + 1;
    return 5;
}

function pthread_multi(ref x: Int, y: Int): Int {
    let k = pthread(ref x);
    return k + y;
}

entrypoint function pthread1(): Int {
    let x = 1;
    let z = pthread(ref x);
    return x + z;
}

entrypoint function pthread2(): Int {
    let x = 2;
    let z = pthread(ref x);
    let w = pthread(ref x);
    return x + z + w;
}

entrypoint function pthread3(): Int {
    let x = 1;
    let z = pthread_multi(ref x, 2);
    return x + z;
}

entrypoint function returnor1(): Int | None {
    let y = (1 == 2) ? none : 4 or return;
    return y + 1;
}

entrypoint function returnor11(): Int | None {
    let y = (1 == 1) ? none : 4 or return;
    return y + 1;
}

entrypoint function returnor2(): Int {
    let y = (1 == 1) ? none : 4 or return 1;
    return y + 1;
}

entrypoint function returnor3(): Int | None {
    let y = (1 == 2) ? 0 : 4 or return when $value == 0;
    return y + 1;
}

entrypoint function returnor4(): Int {
    let y = (1 == 2) ? 0 : 4 or return when $value == 4;
    return y + 1;
}

entrypoint function returnor5(): Int {
    let y = (1 == 1) ? 0 : 4 or return 8 when $value == 4;
    return y + 1;
}

entrypoint function returnor6(): Int {
    let y = (1 == 2) ? 0 : 4 or return 8 when $value == 4;
    return y + 1;
}
