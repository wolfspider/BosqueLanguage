[
    {
        "src": "assign.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "constDeclWithType",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "constDeclWithUnionType",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "varDeclAndAssignWithType",
                "expected": "4"
            },
            {
                "kind": "aot",
                "entrypoint": "varDeclAndAssignWithNoValue",
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclTuple",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclMutableTuple",
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredAssignTuple",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclRecord",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclMutableRecord",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredAssignRecord",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclAndAssign",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclGlobal",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclGlobalMutable",
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredRecordWithTuple",
                "expected": "6"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredTupleWithRecord",
                "expected": "6"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclAndAssignOptionalsMatch",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclAndAssignOptionalsDefault",
                "expected": "3"
            },
            {
                "kind": "aot",
                "entrypoint": "structuredDeclAndAssignIgnores",
                "expected": "2"
            },
            {
                "kind": "symexec",
                "entrypoint": "constDeclWithType",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "constDeclWithUnionType",
                "expected": "(bsqkey_int 3)"
            },
            {
                "kind": "symexec",
                "entrypoint": "varDeclAndAssignWithType",
                "expected": "4"
            },
            {
                "kind": "symexec",
                "entrypoint": "varDeclAndAssignWithNoValue",
                "expected": "(bsqkey_int 5)"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclTuple",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclMutableTuple",
                "expected": "5"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredAssignTuple",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclRecord",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclMutableRecord",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredAssignRecord",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclAndAssign",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclGlobal",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclGlobalMutable",
                "expected": "5"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredRecordWithTuple",
                "expected": "6"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredTupleWithRecord",
                "expected": "6"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclAndAssignOptionalsMatch",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclAndAssignOptionalsDefault",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "structuredDeclAndAssignIgnores",
                "expected": "2"
            },
            {
                "kind": "symtest",
                "entrypoint": "puzzle",
                "error": true
            }
        ]
    },
    {
        "src": "checks.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "abortOp",
                "args": ["true"],
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "abortOp",
                "args": ["false"],
                "expected": null
            },
            {
                "kind": "aot",
                "entrypoint": "assertOp",
                "args": ["true"],
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "assertOp",
                "args": ["false"],
                "expected": null
            },
            {
                "kind": "aot",
                "entrypoint": "checkOp",
                "args": ["true"],
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "checkOp",
                "args": ["false"],
                "expected": null
            },
            {
                "kind": "symexec",
                "entrypoint": "abortC",
                "expected": null
            },
            {
                "kind": "symexec",
                "entrypoint": "assertC",
                "expected": null
            },
            {
                "kind": "symexec",
                "entrypoint": "checkC",
                "expected": null
            },
            {
                "kind": "symtest",
                "entrypoint": "abortOp",
                "error": true
            }
        ]
    },
    {
        "src": "ifstmt.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "ifAssignInBranches",
                "args": ["0"],
                "expected": "true"
            },
            {
                "kind": "aot",
                "entrypoint": "ifAssignInBranches",
                "args": ["3"],
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "ifReAssignInBranches",
                "args": ["0"],
                "expected": "2"
            },
            {
                "kind": "aot",
                "entrypoint": "ifReturnInBranches",
                "args": ["0"],
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "ifEarlyReturn",
                "args": ["1"],
                "expected": "true"
            },
            {
                "kind": "aot",
                "entrypoint": "ifEarlyReturn",
                "args": ["0"],
                "expected": "false"
            },
            {
                "kind": "aot",
                "entrypoint": "ifReturnInElifBranch",
                "args": ["1"],
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "ifReturnInElifBranch",
                "args": ["11"],
                "expected": "5"
            },
            {
                "kind": "symexec",
                "entrypoint": "ifAssignInBranchesC",
                "expected": "(bsqkey_int 1)"
            },
            {
                "kind": "symexec",
                "entrypoint": "ifReturnInElifBranchC",
                "expected": "1"
            },
            {
                "kind": "symtest",
                "entrypoint": "ifAssignInBranches"
            },
            {
                "kind": "symtest",
                "entrypoint": "ifReturnInElifBranch"
            },
            {
                "kind": "symtest",
                "entrypoint": "puzzle",
                "error": true
            }
        ]
    },
    {
        "src": "globals.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "namespaceConstEval",
                "expected": "10"
            },
            {
                "kind": "aot",
                "entrypoint": "staticConstEval",
                "expected": "10"
            },
            {
                "kind": "symexec",
                "entrypoint": "namespaceConstEval",
                "expected": "10"
            },
            {
                "kind": "symexec",
                "entrypoint": "staticConstEval",
                "expected": "10"
            }
        ]
    },
    {
        "src": "fancyflow.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "pthread1",
                "expected": "7"
            },
            {
                "kind": "aot",
                "entrypoint": "pthread2",
                "expected": "14"
            },
            {
                "kind": "aot",
                "entrypoint": "pthread3",
                "expected": "9"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor1",
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor11",
                "expected": "none"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor2",
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor3",
                "expected": "5"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor4",
                "expected": "4"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor5",
                "expected": "1"
            },
            {
                "kind": "aot",
                "entrypoint": "returnor6",
                "expected": "8"
            },
            {
                "kind": "symexec",
                "entrypoint": "pthread1",
                "expected": "7"
            },
            {
                "kind": "symexec",
                "entrypoint": "pthread2",
                "expected": "14"
            },
            {
                "kind": "symexec",
                "entrypoint": "pthread3",
                "expected": "9"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor1",
                "expected": "(bsqkey_int 5)"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor11",
                "expected": "bsqkey_none"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor2",
                "expected": "1"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor3",
                "expected": "(bsqkey_int 5)"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor4",
                "expected": "4"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor5",
                "expected": "1"
            },
            {
                "kind": "symexec",
                "entrypoint": "returnor6",
                "expected": "8"
            }
        ]
    },
    {
        "src": "reccalls.bsq",
        "tests": [
            {
                "kind": "compile"
            },
            {
                "kind": "aot",
                "entrypoint": "rec1",
                "expected": "2"
            },
            {
                "kind": "aot",
                "entrypoint": "rec2",
                "expected": "3"
            },
            {
                "kind": "symexec",
                "entrypoint": "rec1",
                "expected": "2"
            },
            {
                "kind": "symexec",
                "entrypoint": "rec2",
                "expected": "3"
            },
            {
                "kind": "symtest",
                "entrypoint": "recchk"
            },
            {
                "kind": "symtest",
                "entrypoint": "recnope"
            },
            {
                "kind": "symtest",
                "entrypoint": "recerr",
                "error": true
            }
        ]
    }
]