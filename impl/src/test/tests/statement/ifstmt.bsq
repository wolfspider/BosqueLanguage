//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

namespace NSTest;

entrypoint function ifAssignInBranches(x: Int): Int | Bool | None {
    var y: Int | Bool | None = none;
    if (x == 0) {
        y = true;
    }
    else {
        y = 1;
    }
    return y;
}

entrypoint function ifAssignInBranchesC(): Int | Bool | None {
    return ifAssignInBranches(3);
}

entrypoint function ifReAssignInBranches(x: Int): Int {
    var y = 5;
    if (x == 0) {
        y = 2;
    }
    else {
        y = 1;
    }
    return y;
}

entrypoint function ifReturnInBranches(x: Int): Int {
    if (x == 0) {
        return 5;
    }
    else {
        return 1;
    }
}

entrypoint function ifEarlyReturn(x: Int): Bool {
    if (x == 1) {
        return true;
    }
    return false;
}

entrypoint function ifReturnInElifBranch(x: Int): Int {
    if (x == 0) {
        return 8;
    }
    elif (x == 1) {
        return x;
    }
    else {
        return 5;
    }
}

entrypoint function ifReturnInElifBranchC(): Int {
    return ifReturnInElifBranch(1);
}

entrypoint function puzzle(x: Int): Int {
    let r = ifReAssignInBranches(x);
    assert r != 1;
    return 1;
}